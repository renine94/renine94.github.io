# 워크플로우 이름
name: Django CI/CD

# main 이 push 되면 실행
on:
  push:
    branches: [main]

# 같은 그룹이름의 Action 이 여러개 돌아가면 이전 action 취소
concurrency:
  group: deploy_prod
  cancel-in-progress: true

# github-action이 사용할 환경변수, repo settings 에 설정할 것
env:
  AWS_REGION: ap-northeast-2
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

# 실행할 workflow
jobs:

  # CI
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/my-django-app:${{ github.sha }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker tag ${{ env.DOCKER_REGISTRY }}/my-django-app:${{ github.sha }} ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-django-app:${{ github.sha }}
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-django-app:${{ github.sha }}

  # CD
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Fargate
        uses: aws-actions/amazon-ecs-deploy-task@v1
        with:
          task-definition: my-django-app
          service: my-django-app-service
          cluster: my-ecs-cluster
          container-image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-django-app:${{ github.sha }}
